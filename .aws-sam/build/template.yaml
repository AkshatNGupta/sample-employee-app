AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'Employee Management System

  '
Globals:
  Function:
    Timeout: 3
Resources:
  EmployeeApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: EmployeeApi
      StageName: Prod
      Cors:
        AllowMethods: '''POST, GET, OPTIONS, PUT'''
        AllowHeaders: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
        AllowOrigin: '''*'''
      EndpointConfiguration:
        Type: REGIONAL
  PostEmployee:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: PostEmployee
      Policies:
      - AmazonDynamoDBFullAccess
      Runtime: nodejs14.x
      Handler: index.handler
      CodeUri: PostEmployee
      Events:
        EmployeeApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: EmployeeApi
            Path: /employee
            Method: POST
    Metadata:
      SamResourceId: PostEmployee
  GetEmployee:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: GetEmployee
      Policies:
      - AmazonDynamoDBFullAccess
      Runtime: nodejs14.x
      Handler: index.handler
      CodeUri: GetEmployee
      Events:
        EmployeeApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: EmployeeApi
            Path: /employee
            Method: GET
    Metadata:
      SamResourceId: GetEmployee
  UpdateEmployee:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: UpdateEmployee
      Policies:
      - AmazonDynamoDBFullAccess
      Runtime: nodejs14.x
      Handler: index.handler
      CodeUri: UpdateEmployee
      Events:
        EmployeeApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: EmployeeApi
            Path: /employee
            Method: PUT
    Metadata:
      SamResourceId: UpdateEmployee
  DeleteEmployee:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: DeleteEmployee
      Policies:
      - AmazonDynamoDBFullAccess
      Runtime: nodejs14.x
      Handler: index.handler
      CodeUri: DeleteEmployee
      Events:
        EmployeeApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: EmployeeApi
            Path: /employee
            Method: DELETE
    Metadata:
      SamResourceId: DeleteEmployee
  Employee:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Employee
      KeySchema:
      - AttributeName: EmpId
        KeyType: HASH
      - AttributeName: Department
        KeyType: RANGE
      AttributeDefinitions:
      - AttributeName: EmpId
        AttributeType: N
      - AttributeName: Department
        AttributeType: S
      BillingMode: PAY_PER_REQUEST
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
  Department:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Department
      KeySchema:
      - AttributeName: Department
        KeyType: HASH
      AttributeDefinitions:
      - AttributeName: Department
        AttributeType: S
      BillingMode: PAY_PER_REQUEST
  Tax:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Tax
      KeySchema:
      - AttributeName: EmpId
        KeyType: HASH
      - AttributeName: Department
        KeyType: RANGE
      AttributeDefinitions:
      - AttributeName: EmpId
        AttributeType: N
      - AttributeName: Department
        AttributeType: S
      BillingMode: PAY_PER_REQUEST
  TaxCalculator:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: TaxCalculator
      Policies:
      - AmazonDynamoDBFullAccess
      Runtime: nodejs14.x
      Handler: index.handler
      CodeUri: TaxCalculator
      Events:
        Employee:
          Type: DynamoDB
          Properties:
            Stream:
              Fn::GetAtt:
              - Employee
              - StreamArn
            StartingPosition: LATEST
            BatchSize: 3
            MaximumRetryAttempts: 2
            MaximumRecordAgeInSeconds: 180
            MaximumBatchingWindowInSeconds: 60
            BisectBatchOnFunctionError: false
            Enabled: true
            FilterCriteria:
              Filters:
              - Pattern: '{ "dynamodb" : { "NewImage" : { "Taxable" : { "BOOL" : [
                  true ] } } } }'
              - Pattern: '{ "dynamodb" : { "OldImage" : { "Taxable" : { "BOOL" : [
                  true ] } } } }'
    Metadata:
      SamResourceId: TaxCalculator
  DepartmentManager:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: DepartmentManager
      Policies:
      - AmazonDynamoDBFullAccess
      Runtime: nodejs14.x
      Handler: index.handler
      CodeUri: DepartmentManager
      Events:
        Employee:
          Type: DynamoDB
          Properties:
            Stream:
              Fn::GetAtt:
              - Employee
              - StreamArn
            StartingPosition: LATEST
            BatchSize: 3
            MaximumRetryAttempts: 2
            MaximumRecordAgeInSeconds: 180
            MaximumBatchingWindowInSeconds: 60
            BisectBatchOnFunctionError: false
            Enabled: true
    Metadata:
      SamResourceId: DepartmentManager
Outputs:
  EmployeeApi:
    Description: API Gateway endpoint URL for Prod stage for EmployeeApi function
    Value:
      Fn::Sub: https://${EmployeeApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/
  PostEmployeeLambda:
    Description: PostEmployee Lambda Function ARN
    Value:
      Fn::GetAtt:
      - PostEmployee
      - Arn
  GetEmployeeLambda:
    Description: GetEmployee Lambda Function ARN
    Value:
      Fn::GetAtt:
      - GetEmployee
      - Arn
  UpdateEmployeeLambda:
    Description: UpdateEmployee Lambda Function ARN
    Value:
      Fn::GetAtt:
      - UpdateEmployee
      - Arn
  DeleteEmployeeLambda:
    Description: DeleteEmployee Lambda Function ARN
    Value:
      Fn::GetAtt:
      - DeleteEmployee
      - Arn
  Employee:
    Description: Employee DynamoDB Table Arn
    Value:
      Fn::GetAtt:
      - Employee
      - Arn
  Department:
    Description: Department DynamoDB Table Arn
    Value:
      Fn::GetAtt:
      - Department
      - Arn
  Tax:
    Description: Tax DynamoDB Table Arn
    Value:
      Fn::GetAtt:
      - Tax
      - Arn
  TaxCalculatorLambda:
    Description: TaxCalculator Lambda Function ARN
    Value:
      Fn::GetAtt:
      - TaxCalculator
      - Arn
  DepartmentManagerLambda:
    Description: DepartmentManager Lambda Function ARN
    Value:
      Fn::GetAtt:
      - DepartmentManager
      - Arn
